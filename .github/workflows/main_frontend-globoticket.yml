# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Globoticket Frontend
env:
  HomePage: ''
on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build with dotnet
        run: dotnet build frontend/frontend.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish frontend/frontend.csproj -c Release -o ${{env.DOTNET_ROOT}}/frontend

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ${{env.DOTNET_ROOT}}/frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: frontend

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Create Deployment Slot Staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp deployment slot create --name globoticket-frontend --resource-group globoticket --slot staging'
          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'globoticket'
          slot-name: 'staging'
          package: .
      - name: Set homepage location for next job
        id: set_var
        run: |
          echo "homepage=${{ steps.deploy-to-webapp.outputs.webapp-url }}" >> $GITHUB_OUTPUT
          
  validate:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: 'staging'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Install playwright
        run:  npm init playwright@latest
          
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x   
      
      - name: Install playwright 
        run:  dotnet tool install --global Microsoft.Playwright.CLI
     
      - name: ensure deployment is healthy before we test
        run: |
            HEALTH_ENDPOINT="https://globoticket-frontend-dpfbe7hxa6d2bdab.westeurope-01.azurewebsites.net/health/ready"
            while true; do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Healthy" ]]; then
                echo "Health endpoint current status :" $status
                break
              fi
              echo "Waiting for health endpoint..."
              sleep 1
            done
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
      - name: Run tests
        run: dotnet test Tests.Playwright/Tests.Playwright.csproj
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
  FirstTrafic:
    runs-on: ubuntu-latest
    needs: validate
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Move 10% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing set --distribution staging=10  --name globoticket-frontend --resource-group globoticket'
      - name: validate the deployment is still healthy for 10 seconds
        run: |
            MAX_ATTEMPTS=10
            HEALTH_ENDPOINT="https://globoticket-frontend-dpfbe7hxa6d2bdab.westeurope-01.azurewebsites.net/health/ready"
             for ((attempt=1; attempt <= MAX_ATTEMPTS; attempt++)); do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Unhealthy" ]]; then
                echo "Health endpoint is Unhealthy."
                exit -1
              fi

              echo "Attempt $attempt: Health endpoint is:" $status
              sleep 1
            done       
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
  
  SecondStepTrafic:
    runs-on: ubuntu-latest
    needs: FirstTrafic
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Move 20% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing set --distribution staging=20  --name globoticket-frontend --resource-group globoticket'
      - name: validate the deployment is still healthy for 10 seconds
        run: |
            MAX_ATTEMPTS=10
            HEALTH_ENDPOINT="https://globoticket-frontend-dpfbe7hxa6d2bdab.westeurope-01.azurewebsites.net/health/ready"
             for ((attempt=1; attempt <= MAX_ATTEMPTS; attempt++)); do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Unhealthy" ]]; then
                echo "Health endpoint is Unhealthy."
                exit -1
              fi

              echo "Attempt $attempt: Health endpoint is:" $status
              sleep 1
            done       
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
  
  ThirdStepTrafic:
    runs-on: ubuntu-latest
    needs: SecondStepTrafic
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Move 20% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing set --distribution staging=30  --name globoticket-frontend --resource-group globoticket'
      - name: validate the deployment is still healthy for 10 seconds
        run: |
            MAX_ATTEMPTS=10
            HEALTH_ENDPOINT="https://globoticket-frontend-dpfbe7hxa6d2bdab.westeurope-01.azurewebsites.net/health/ready"
             for ((attempt=1; attempt <= MAX_ATTEMPTS; attempt++)); do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Unhealthy" ]]; then
                echo "Health endpoint is Unhealthy."
                exit -1
              fi

              echo "Attempt $attempt: Health endpoint is:" $status
              sleep 1
            done       
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
  VipSwap:
    runs-on: ubuntu-latest
    needs: ThirdStepTrafic
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Move 30% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp deployment slot swap --slot staging  --name globoticket-frontend --resource-group globoticket'

      - name: validate the deployment is still healthy for 10 seconds 
        run: |
            MAX_ATTEMPTS=10
            HEALTH_ENDPOINT="https://globoticket-frontend-dpfbe7hxa6d2bdab.westeurope-01.azurewebsites.net/health/ready"
             for ((attempt=1; attempt <= MAX_ATTEMPTS; attempt++)); do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Unhealthy" ]]; then
                echo "Health endpoint is Unhealthy."
                exit -1
              fi

              echo "Attempt $attempt: Health endpoint is:" $status
              sleep 1
            done       
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}

      - name: clear Routing rules (100% to production)
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing clear --name globoticket-frontend --resource-group globoticket'

      - name: clear staging slot
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp deployment slot delete --name globoticket-frontend --resource-group globoticket --slot staging'
