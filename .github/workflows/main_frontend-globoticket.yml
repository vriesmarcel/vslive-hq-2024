name: FrontEnd Deploy New Release
env:
  HomePage: ''
on:
  release: 
      types: [published] 
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    outputs:
      homepage: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: get release artifacts for deployment
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          regex: true
          file: ".*"
          target: './'

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Create Deployment Slot Staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp deployment slot create --name globoticket-frontend --resource-group globoticket --slot staging'
          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'globoticket-frontend'
          slot-name: 'staging'
          package: .
      - name: Set homepage location for next job
        id: set_var
        run: |
          echo "homepage=${{ steps.deploy-to-webapp.outputs.webapp-url }}" >> $GITHUB_OUTPUT
          
  validate:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: 'staging'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
     
      - name: ensure deployment is healthy before we test
        run: |
            HEALTH_ENDPOINT="${{ env.homepage }}/health/ready"
            while true; do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Healthy" ]]; then
                echo "Health endpoint current status :" $status
                break
              fi
              echo "Waiting for health endpoint..."
              sleep 1
            done
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
      
      - name: Build & Install
        run: dotnet build Tests.Playwright/Tests.Playwright.csproj
      
      - name: Install browsers
        run: pwsh Tests.Playwright/bin/Debug/net8.0/playwright.ps1 install
            
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Run tests
        run: dotnet test Tests.Playwright/Tests.Playwright.csproj --logger "microsoft-playwright-testing" -- NUnit.NumberOfTestWorkers=20 --settings:.runsettings
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
          PLAYWRIGHT_SERVICE_URL: "wss://westeurope.api.playwright.microsoft.com/accounts/westeurope_551a8bf6-0033-4f0f-9bb1-bfd1342d2fe3/browsers"
     
  FirstTrafic:
    runs-on: ubuntu-latest
    needs: [validate, deploy]
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Move 10% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing set --distribution staging=10  --name globoticket-frontend --resource-group globoticket'

      - name: ensure deployment is healthy 
        run: |
            HEALTH_ENDPOINT="${{ env.homepage }}/health/ready"
            while true; do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Healthy" ]]; then
                echo "Health endpoint current status :" $status
                break
              fi
              echo "Waiting for health endpoint..."
              sleep 1
            done
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}

  
  SecondStepTrafic:
    runs-on: ubuntu-latest
    needs: [FirstTrafic, deploy]
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Move 20% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing set --distribution staging=20  --name globoticket-frontend --resource-group globoticket'

      - name: ensure deployment is healthy 
        run: |
            HEALTH_ENDPOINT="${{ env.homepage }}/health/ready"
            while true; do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Healthy" ]]; then
                echo "Health endpoint current status :" $status
                break
              fi
              echo "Waiting for health endpoint..."
              sleep 1
            done
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
  
  ThirdStepTrafic:
    runs-on: ubuntu-latest
    needs: [SecondStepTrafic, deploy]
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Move 20% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing set --distribution staging=30  --name globoticket-frontend --resource-group globoticket'
   
      - name: ensure deployment is healthy 
        run: |
            HEALTH_ENDPOINT="${{ env.homepage }}/health/ready"
            while true; do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Healthy" ]]; then
                echo "Health endpoint current status :" $status
                break
              fi
              echo "Waiting for health endpoint..."
              sleep 1
            done
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}
          
  VipSwap:
    runs-on: ubuntu-latest
    needs: [ThirdStepTrafic, deploy]
    environment:
      name: 'staging'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Move 30% trafic to staging
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp deployment slot swap --slot staging  --name globoticket-frontend --resource-group globoticket'

      - name: ensure deployment is healthy 
        run: |
            HEALTH_ENDPOINT="${{ env.homepage }}/health/ready"
            while true; do
              response=$(curl -s "$HEALTH_ENDPOINT")
              status=$(echo "$response" | jq -r '.status')

              if [[ "$status" == "Healthy" ]]; then
                echo "Health endpoint current status :" $status
                break
              fi
              echo "Waiting for health endpoint..."
              sleep 1
            done
        env: 
          homepage: ${{ needs.deploy.outputs.homepage }}

      - name: clear Routing rules (100% to production)
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp traffic-routing clear --name globoticket-frontend --resource-group globoticket'

      - name: clear staging slot
        uses: Azure/cli@v1.0.7
        with:
          inlinescript: 'az webapp deployment slot delete --name globoticket-frontend --resource-group globoticket --slot staging'
